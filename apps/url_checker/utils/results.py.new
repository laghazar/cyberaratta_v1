"""
URL Check Results Formatter

‘±’µ’Ω ’¥’∏’§’∏÷Ç’¨’® ’ø÷Ä’°’¥’°’§÷Ä’∏÷Ç’¥ ’ß ÷Ü’∏÷Ç’∂’Ø÷Å’´’°’∂’•÷Ä URL ’Ω’ø’∏÷Ç’£’¥’°’∂ ’°÷Ä’§’µ’∏÷Ç’∂÷Ñ’∂’•÷Ä’´ ’±÷á’°’æ’∏÷Ä’¥’°’∂ ’∞’°’¥’°÷Ä:
"""

from django.utils.safestring import mark_safe
from django.utils.html import escape
from .formatting import format_scan_result_html, format_overall_result
from .recommendations import generate_recommendations


def format_detailed_response(status, url, vt_result=None, kasp_result=None, safebrowsing_result=None, need_manual_review=False):
    """
    ’Å÷á’°’æ’∏÷Ä’∏÷Ç’¥ ’ß ’¥’°’∂÷Ä’°’¥’°’Ω’∂ HTML ’∫’°’ø’°’Ω’≠’°’∂ URL ’Ω’ø’∏÷Ç’£’¥’°’∂ ’°÷Ä’§’µ’∏÷Ç’∂÷Ñ’∂’•÷Ä’´ ’∞’´’¥’°’∂ ’æ÷Ä’°
    
    Args:
        status (str): ‘∏’∂’§’∞’°’∂’∏÷Ç÷Ä ’Ø’°÷Ä’£’°’æ’´’≥’°’Ø’® ('safe', 'suspicious', 'malicious', 'pending')
        url (str): ’ç’ø’∏÷Ç’£’æ’°’Æ URL-’®
        vt_result (dict): VirusTotal ’Ω’ø’∏÷Ç’£’¥’°’∂ ’°÷Ä’§’µ’∏÷Ç’∂÷Ñ’∂’•÷Ä’®
        kasp_result (dict): Kaspersky ’Ω’ø’∏÷Ç’£’¥’°’∂ ’°÷Ä’§’µ’∏÷Ç’∂÷Ñ’∂’•÷Ä’®
        safebrowsing_result (dict): Google Safe Browsing ’Ω’ø’∏÷Ç’£’¥’°’∂ ’°÷Ä’§’µ’∏÷Ç’∂÷Ñ’∂’•÷Ä’®
        need_manual_review (bool): ’ä’°’∞’°’∂’ª’æ’∏÷Ç’¥ ’ß ’±’•’º÷Ñ’∏’æ ’Ω’ø’∏÷Ç’£’∏÷Ç’¥
        
    Returns:
        str: HTML ’±÷á’°’π’°÷É’∏’æ ’±÷á’°’æ’∏÷Ä’æ’°’Æ ’°÷Ä’§’µ’∏÷Ç’∂÷Ñ
    """
    try:
        all_results = {}
        
        if status == 'pending':
            # ‘∏’∂’©’°÷Å’´’Ø ’Ω’ø’∏÷Ç’£’∏÷Ç’¥
            return mark_safe(f"""
            <div class="alert alert-warning">
                <i class="fas fa-clock me-2"></i>
                URL-’´ ’Ω’ø’∏÷Ç’£’∏÷Ç’¥’® ’®’∂’©’°÷Å÷Ñ’´ ’¥’•’ª ’ß: ‘Ω’∂’§÷Ä’∏÷Ç’¥ ’•’∂÷Ñ ’Ω’∫’°’Ω’•’¨...
            </div>
            <div class="text-center">
                <div class="spinner-border text-primary" role="status">
                    <span class="visually-hidden">‘≤’•’º’∂’æ’∏÷Ç’¥ ’ß...</span>
                </div>
            </div>
            """)
        
        # ’Å÷á’°’æ’∏÷Ä’∏÷Ç’¥ ’•’∂÷Ñ ’°’∂’æ’ø’°’∂’£’∏÷Ç’©’µ’°’∂ ’¥’´’°’æ’∏÷Ä’®
        security_score = calculate_security_score(status, vt_result, kasp_result, safebrowsing_result)
        
        # ’Ä’°’æ’°÷Ñ’∏÷Ç’¥ ’•’∂÷Ñ ’°÷Ä’§’µ’∏÷Ç’∂÷Ñ’∂’•÷Ä’®
        if vt_result and not vt_result.get('pending', False):
            all_results['VirusTotal'] = vt_result
            
        if kasp_result and not kasp_result.get('pending', False):
            all_results['Kaspersky'] = kasp_result
            
        if safebrowsing_result and not safebrowsing_result.get('pending', False):
            all_results['SafeBrowsing'] = safebrowsing_result
        
        # ’Å÷á’°’æ’∏÷Ä’∏÷Ç’¥ ’•’∂÷Ñ ’®’∂’§’∞’°’∂’∏÷Ç÷Ä ’°÷Ä’§’µ’∏÷Ç’∂÷Ñ’®
        overall_result_html = format_overall_result(security_score, all_results)
        
        # ’Å÷á’°’æ’∏÷Ä’∏÷Ç’¥ ’•’∂÷Ñ ’°’º’°’∂’±’´’∂ ’Ω’ø’∏÷Ç’£’∏÷Ç’¥’∂’•÷Ä’´ ’°÷Ä’§’µ’∏÷Ç’∂÷Ñ’∂’•÷Ä’®
        scan_results_html = ""
        
        for integration_name, result in all_results.items():
            scan_results_html += format_scan_result_html(result, integration_name)
        
        # ’Å÷á’°’æ’∏÷Ä’∏÷Ç’¥ ’•’∂÷Ñ ’°’º’°’ª’°÷Ä’Ø’∏÷Ç’©’µ’∏÷Ç’∂’∂’•÷Ä’®
        recommendations_html = generate_recommendations(all_results, url)
        
        # ’Å÷á’°’æ’∏÷Ä’∏÷Ç’¥ ’•’∂÷Ñ ’æ’•÷Ä’ª’∂’°’Ø’°’∂ HTML
        return mark_safe(f"""
        <div class="url-check-results">
            <div class="mt-4 mb-3">
                <p style="color: #000;"><strong style="color: #000;">’ï’£’ø’°’£’∏÷Ä’Æ’æ’°’Æ API-’∂’•÷Ä:</strong> {', '.join(all_results.keys())}</p>
            </div>
            
            <h4 class="mt-4 mb-3">üîç ’Ñ’°’∂÷Ä’°’¥’°’Ω’∂ ’ç’ø’∏÷Ç’£’¥’°’∂ ‘±÷Ä’§’µ’∏÷Ç’∂÷Ñ’∂’•÷Ä</h4>
            {scan_results_html}
            
            {overall_result_html}
            
            {recommendations_html}
            
            {
                '<div class="alert alert-warning mt-4"><i class="fas fa-user-check me-2"></i> <strong>’Ü’∑’∏÷Ç’¥:</strong> ‘±’µ’Ω URL-’® ’§’•’º ’∏÷Ç’Ω’∏÷Ç’¥’∂’°’Ω’´÷Ä’æ’∏÷Ç’¥ ’ß ’¥’•÷Ä ’¥’°’Ω’∂’°’£’•’ø’∂’•÷Ä’´ ’Ø’∏’≤’¥’´÷Å:</div>' 
                if need_manual_review 
                else ''
            }
        </div>
        """)
    except Exception as e:
        # ’ç’≠’°’¨’´ ’§’•’∫÷Ñ’∏÷Ç’¥ ÷Å’∏÷Ç÷Å’°’§÷Ä’•’¨ ’∫’°÷Ä’¶ ’ø’•’≤’•’Ø’°’ø’æ’∏÷Ç’©’µ’∏÷Ç’∂
        print(f"Error in format_detailed_response: {str(e)}")
        return mark_safe(f"""
        <div class="alert alert-danger">
            <i class="fas fa-exclamation-circle me-2"></i>
            <strong>’ç’≠’°’¨ ’ß ’ø’•’≤’´ ’∏÷Ç’∂’•÷Å’•’¨:</strong> URL-’´ ’Ω’ø’∏÷Ç’£’¥’°’∂ ’®’∂’©’°÷Å÷Ñ’∏÷Ç’¥ ’Ω’≠’°’¨ ’ß ’ø’•’≤’´ ’∏÷Ç’∂’•÷Å’•’¨: ‘Ω’∂’§÷Ä’∏÷Ç’¥ ’•’∂÷Ñ ’Ø÷Ä’Ø’´’∂ ÷É’∏÷Ä’±’•’¨:
        </div>
        <div class="alert alert-info">
            <i class="fas fa-info-circle me-2"></i>
            <strong>’è’•’≠’∂’´’Ø’°’Ø’°’∂ ’ø’•’≤’•’Ø’∏÷Ç’©’µ’∏÷Ç’∂:</strong> {escape(str(e))}
        </div>
        """)


def calculate_security_score(status, vt_result=None, kasp_result=None, safebrowsing_result=None):
    """
    ’Ä’°’∑’æ’°÷Ä’Ø’∏÷Ç’¥ ’ß ’°’∂’æ’ø’°’∂’£’∏÷Ç’©’µ’°’∂ ’¥’´’°’æ’∏÷Ä’® (0-100) ’Ω’ø’∏÷Ç’£’¥’°’∂ ’°÷Ä’§’µ’∏÷Ç’∂÷Ñ’∂’•÷Ä’´ ’∞’´’¥’°’∂ ’æ÷Ä’°
    
    Args:
        status (str): ‘∏’∂’§’∞’°’∂’∏÷Ç÷Ä ’Ø’°÷Ä’£’°’æ’´’≥’°’Ø’®
        vt_result (dict): VirusTotal ’Ω’ø’∏÷Ç’£’¥’°’∂ ’°÷Ä’§’µ’∏÷Ç’∂÷Ñ’∂’•÷Ä’®
        kasp_result (dict): Kaspersky ’Ω’ø’∏÷Ç’£’¥’°’∂ ’°÷Ä’§’µ’∏÷Ç’∂÷Ñ’∂’•÷Ä’®
        safebrowsing_result (dict): Google Safe Browsing ’Ω’ø’∏÷Ç’£’¥’°’∂ ’°÷Ä’§’µ’∏÷Ç’∂÷Ñ’∂’•÷Ä’®
        
    Returns:
        int: ‘±’∂’æ’ø’°’∂’£’∏÷Ç’©’µ’°’∂ ’¥’´’°’æ’∏÷Ä’® (0-100)
    """
    if status == 'malicious':
        # ‘µ’©’• ’∏÷Ä÷á’ß ’°’≤’¢’µ’∏÷Ç÷Ä ’∂’∑’∏÷Ç’¥ ’ß ’æ’ø’°’∂’£’°’æ’∏÷Ä, ’°’∫’° ’¥’´’°’æ’∏÷Ä’® ÷Å’°’Æ÷Ä ’ß
        return 10
    
    if status == 'suspicious':
        # ‘ø’°’Ω’Ø’°’Æ’•’¨’´ - ’¥’´’ª’´’∂ ’¥’´’°’æ’∏÷Ä
        return 40
    
    if status == 'safe':
        # ‘±’∂’æ’ø’°’∂’£ - ’¢’°÷Ä’±÷Ä ’¥’´’°’æ’∏÷Ä
        # ‘µ’©’• ’°’æ’•’¨’´ ’∑’°’ø ’°’≤’¢’µ’∏÷Ç÷Ä’∂’•÷Ä ’•’∂ ’∂’∑’∏÷Ç’¥ ’°’∂’æ’ø’°’∂’£, ’¥’´’°’æ’∏÷Ä’® ’°’æ’•’¨’´ ’¢’°÷Ä’±÷Ä ’ß
        sources_count = sum(1 for result in [vt_result, kasp_result, safebrowsing_result] if result)
        trusted_sources = sum(1 for result in [vt_result, kasp_result, safebrowsing_result] if result and result.get('trusted', False))
        
        if trusted_sources > 0:
            return 100  # ’é’Ω’ø’°’∞’•’¨’´ ’§’∏’¥’•’∂ - ’°’º’°’æ’•’¨’°’£’∏÷Ç’µ’∂ ’¥’´’°’æ’∏÷Ä
        
        # ‘±’µ’¨ ’°’∂’æ’ø’°’∂’£ ’Ø’°’µ÷Ñ’•÷Ä
        return 85
    
    # ‘∏’∂’©’°÷Å’´’Ø ’Ø’°’¥ ’°’µ’¨ ’Ø’°÷Ä’£’°’æ’´’≥’°’Ø - ’π’•’¶’∏÷Ñ ’¥’´’°’æ’∏÷Ä
    return 50
