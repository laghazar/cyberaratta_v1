#!/usr/bin/env python
"""
Create DamageType data for CyberAratta reporting system
Run this with: python create_damage_types.py
"""

import os
import sys
import django

# Setup Django
sys.path.append(os.path.dirname(os.path.abspath(__file__)))
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'cyberaratta.settings')
django.setup()

from apps.reporting.models import DamageType

def create_damage_types():
    """Create damage types based on the original choices"""
    print("Creating damage types...")
    
    damage_types_data = [
        # Data breach category
        ('data_breach', '‘±’∂’±’∂’°’Ø’°’∂ ’ø’æ’µ’°’¨’∂’•÷Ä’´ ’°÷Ä’ø’°’∞’∏’Ω÷Ñ', '‘±’∂’∏÷Ç’∂, ’°’¶’£’°’∂’∏÷Ç’∂, ’°’∂’±’∂’°’£’´÷Ä, ’∞’°’Ω÷Å’•, ’∞’•’º’°’≠’∏’Ω, ’ß’¨. ÷É’∏’Ω’ø', 1),
        ('data_breach', '’Ñ’∏÷Ç’ø÷Ñ’´ ’ø’æ’µ’°’¨’∂’•÷Ä’´ ’£’∏’≤’∏÷Ç’©’µ’∏÷Ç’∂', '‘≥’°’≤’ø’∂’°’¢’°’º’•÷Ä, 2FA ’Ø’∏’§’•÷Ä, ’ß’¨. ’∂’°’¥’°’Ø’∂’•÷Ä', 2),
        ('data_breach', '‘≤’°’∂’Ø’°’µ’´’∂ ’ø’æ’µ’°’¨’∂’•÷Ä’´ ’°÷Ä’ø’°’∞’∏’Ω÷Ñ', '’î’°÷Ä’ø’´ ’∞’°’¥’°÷Ä’®, CVV, ’∞’°’∑’æ’´ ’¥’∏÷Ç’ø÷Ñ’•÷Ä', 3),
        ('data_breach', '‘±’º’°’ª’°’§’•’¥ ’°’∂’±’∂’°’Ø’°’∂ ’ø’æ’µ’°’¨’∂’•÷Ä’´ ’°÷Ä’ø’°’∞’∏’Ω÷Ñ', '‘≤’™’∑’Ø’°’Ø’°’∂ ’ø’æ’µ’°’¨’∂’•÷Ä, ’Ø÷Ä’©’∏÷Ç’©’µ’°’∂, ’°’∑’≠’°’ø’°’æ’°’µ÷Ä’´ ’ø’æ’µ’°’¨’∂’•÷Ä', 4),
        ('data_breach', '’ä’•’ø’°’Ø’°’∂/’∫’°’∑’ø’∏’∂’°’Ø’°’∂ ’ø’æ’µ’°’¨’∂’•÷Ä’´ ’°÷Ä’ø’°’∞’∏’Ω÷Ñ', '‘≥’°’≤’ø’∂’´ ’∫’•’ø’°’Ø’°’∂ ’Ø’°’¥ ’∫’°’∑’ø’∏’∂’°’Ø’°’∂ ’ø’•’≤’•’Ø’∏÷Ç’©’µ’∏÷Ç’∂’∂’•÷Ä', 5),
        ('data_breach', '’è’æ’µ’°’¨’∂’•÷Ä’´ ’Ø’∏÷Ä’∏÷Ç’Ω’ø/’∏’π’∂’π’°÷Å’∏÷Ç’¥', '’Ä’°’ø’Ø’°’∫’•’Ω ’∫’°’∞’∏÷Å’∂’•÷Ä’∏÷Ç’¥', 6),
        ('data_breach', '‘±’∂’∞’°’ø’°’Ø’°’∂ ’£’°’≤’ø’∂’´’∏÷Ç’©’µ’°’∂ ’≠’°’≠’ø’∏÷Ç’¥', '’ç’∏÷Å. ÷Å’°’∂÷Å’•÷Ä’∏÷Ç’¥ ’°’∂’±’∂’°’Ø’°’∂ ’¨’∏÷Ç’Ω’°’∂’Ø’°÷Ä’∂’•÷Ä ’Ø’°’¥ ’£÷Ä’°’º’∏÷Ç’¥’∂’•÷Ä', 7),
        
        # Financial loss category
        ('financial_loss', '’â’°÷Ä’ø’∏’∂’æ’°’Æ ’£’∏÷Ç’¥’°÷Ä’´ ’∞’°’∂’∏÷Ç’¥', '‘≤’°’∂’Ø’°’µ’´’∂ ’∞’°’∑’æ’´÷Å ’Ø’°’¥ ’æ’°÷Ä’Ø’°’µ’´’∂ ÷Ñ’°÷Ä’ø’´÷Å', 1),
        ('financial_loss', '’â’°÷Ä’ø’∏’∂’æ’°’Æ ’æ’≥’°÷Ä’∏÷Ç’¥’∂’•÷Ä/÷É’∏’≠’°’∂÷Å’∏÷Ç’¥’∂’•÷Ä', '‘±’∂’£’°’¥ ÷É’∏÷Ñ÷Ä ’£’∏÷Ç’¥’°÷Ä’∂’•÷Ä', 2),
        ('financial_loss', '’é’≥’°÷Ä’∏’æ’´ ’Æ’°’º’°’µ’∏÷Ç’©’µ’∏÷Ç’∂’∂’•÷Ä’´ ’π’°÷Ä’°’∑’°’∞’∏÷Ç’¥', '‘≤’∏’ø’•÷Ä’´, ÷Ü’´’∑’´’∂’£’´ ’¥’´’ª’∏÷Å’∏’æ', 3),
        ('financial_loss', '’ñ’´’∂’°’∂’Ω’°’Ø’°’∂ ’ø’æ’µ’°’¨’∂’•÷Ä’´ ’Ø’•’≤’Æ’∏÷Ç’¥', '’ñ’´’∂’°’∂’Ω’°’Ø’°’∂ ’ø’æ’µ’°’¨’∂’•÷Ä’´ ’π’°÷Ä’°’∑’°’∞’∏÷Ç’¥', 4),
        ('financial_loss', '’é’°÷Ä’Ø’•÷Ä’´ ’π’°÷Ä’°’∑’°’∞’∏÷Ç’¥ ’´’¥ ’°’∂’∏÷Ç’∂’∏’æ', '’é’°÷Ä’Ø’•÷Ä’´ ’Ø’°’¥ ÷Ü’´’∂’°’∂’Ω’°’Ø’°’∂ ’∫’°÷Ä’ø’°’æ’∏÷Ä’∏÷Ç’©’µ’∏÷Ç’∂’∂’•÷Ä’´ ’π’°÷Ä’°’∑’°’∞’∏÷Ç’¥', 5),
        ('financial_loss', '‘±’∂’∞’°’µ’ø ’æ’≥’°÷Ä’∏÷Ç’¥’∂’•÷Ä/’£’∏÷Ç’¥’°÷Ä’∂’•÷Ä’´ ’°’∂’∞’•’ø’°÷Å’∏÷Ç’¥', '‘±’∂’∞’°’µ’ø ’∞’°’æ’•’¨’µ’°’¨ ’æ’≥’°÷Ä’∏÷Ç’¥’∂’•÷Ä', 6),
        
        # Account loss category
        ('account_loss', '’ï’£’ø’°’∞’°’∑’æ’´ ’¥’∏÷Ç’ø÷Ñ’´ ’Ø’∏÷Ä’∏÷Ç’Ω’ø', '’â’Ø’°÷Ä’∏’≤’°÷Å’° ’æ’•÷Ä’°’Ø’°’∂’£’∂’•’¨ ’¥’∏÷Ç’ø÷Ñ’®', 1),
        ('account_loss', '‘±’∂’±’∂’°’Ø’°’∂ ’∞’°’≤’∏÷Ä’§’°’£÷Ä’∏÷Ç’©’µ’∏÷Ç’∂’∂’•÷Ä’´ ’£’°’≤’ø’∂’´’∏÷Ç’©’µ’°’∂ ’≠’°’≠’ø’∏÷Ç’¥', '‘Ω’°’≠’ø’æ’•’¨ ’ß ’∞’°’∑’æ’´ ’°’∂’±’∂’°’Ø’°’∂ ’∞’°’≤’∏÷Ä’§’°’£÷Ä’∏÷Ç’©’µ’∏÷Ç’∂’∂’•÷Ä’´ ’£’°’≤’ø’∂’´’∏÷Ç’©’µ’∏÷Ç’∂’®', 2),
        ('account_loss', '’ï’£’ø’°’∞’°’∑’æ’´ ’π’°÷Ä’°’¥’´’ø ÷Ö’£’ø’°’£’∏÷Ä’Æ’∏÷Ç’¥', '‘Ω’°’¢’•’∏÷Ç’©’µ’°’¥’¢ ’¥’∏÷Ç’ø÷Ñ, ’∞÷Ä’°’∫’°÷Ä’°’Ø’∏÷Ç’¥’∂’•÷Ä', 3),
        ('account_loss', '’ï’£’ø’°’∞’°’∑’æ’´ ’¥’´’ª’∏÷Å’∏’æ ’≠’°÷Ä’§’°’≠’∏÷Ç’©’µ’∏÷Ç’∂', '’ï’£’ø’°’∞’°’∑’æ’´ ’¥’´’ª’∏÷Å’∏’æ ’≠’°÷Ä’§’°’≠’∏÷Ç’©’µ’∏÷Ç’∂ ’Ø’°’¥ ’æ’´÷Ä’∏÷Ç’Ω’°’µ’´’∂ ’ø’°÷Ä’°’Æ’∏÷Ç’¥', 4),
        ('account_loss', '‘≤’°’¶’¥’°’©’´’æ ’Æ’°’º’°’µ’∏÷Ç’©’µ’∏÷Ç’∂’∂’•÷Ä’´ ’°’∂’æ’ø’°’∂’£’∏÷Ç’©’µ’°’∂ ’≠’°’©’°÷Ä’∏÷Ç’¥', '‘µ÷Ä’Ø’∏÷Ç ÷á ’°’æ’•’¨’´ ’Æ’°’º’°’µ’∏÷Ç’©’µ’∏÷Ç’∂’∂’•÷Ä’∏÷Ç’¥ (÷Ö÷Ä’´’∂’°’Ø’ù Google + Facebook)', 5),
        
        # Device control loss category
        ('device_control_loss', '’â’°÷Ä’°’¥’´’ø ’Æ÷Ä’°’£÷Ä’´ ’ø’•’≤’°’§÷Ä’∏÷Ç’¥', 'Keylogger, spyware, RAT', 1),
        ('device_control_loss', '’â’°÷Ä’ø’∏’∂’æ’°’Æ ’∞’•’º’°’Ø’° ’¥’∏÷Ç’ø÷Ñ', '’â’°÷Ä’ø’∏’∂’æ’°’Æ ’∞’•’º’°’Ø’° ’¥’∏÷Ç’ø÷Ñ ’Ω’°÷Ä÷Ñ’´ ’æ÷Ä’°', 2),
        ('device_control_loss', '’è’æ’µ’°’¨’∂’•÷Ä’´ ’∏’π’∂’π’°÷Å’∏÷Ç’¥/÷É’∏’≠’∏÷Ç’¥', '’è’æ’µ’°’¨’∂’•÷Ä’´ ’∏’π’∂’π’°÷Å’∏÷Ç’¥ ’Ø’°’¥ ÷É’∏’≠’∏÷Ç’¥ ’Ω’°÷Ä÷Ñ’∏÷Ç’¥', 3),
        ('device_control_loss', '’è’æ’µ’°’¨’∂’•÷Ä’´ ’£’°’≤’ø’∂’°’£÷Ä’∏÷Ç’¥ (ransomware)', '’ç’°÷Ä÷Ñ’´ ’ø’æ’µ’°’¨’∂’•÷Ä’´ ’£’°’≤’ø’∂’°’£÷Ä’¥’°’∂ ’∞’•’ø÷á’°’∂÷Ñ’∏’æ ’∏’π’∂’π’°÷Å’∏÷Ç’¥', 4),
        ('device_control_loss', '’ç’°÷Ä÷Ñ’´ ’Ø’∏÷Ä’∏÷Ç’Ω’ø/’£’∏’≤’∏÷Ç’©’µ’∏÷Ç’∂', '‘ø’´’¢’•’º’∞’°÷Ä’±’°’Ø’∏÷Ç’¥’∏’æ ’∞’°’¥’°’Ø÷Å’æ’°’Æ', 5),
        
        # Psychological damage category
        ('psychological_damage', '’Ä’∏’£’•’¢’°’∂’°’Ø’°’∂ ’≥’∂’∑’∏÷Ç’¥/’∑’°’∂’ø’°’™', '’Ä’∏’£’•’¢’°’∂’°’Ø’°’∂ ’≥’∂’∑’∏÷Ç’¥, ’Ω’∫’°’º’∂’°’¨’´÷Ñ’∂’•÷Ä ’Ø’°’¥ ’∑’°’∂’ø’°’™', 1),
        ('psychological_damage', '‘ø’´’¢’•’º’¢’∏÷Ç’¨’¨’´’∂’£/’æ’´÷Ä’°’æ’∏÷Ä’°’∂÷Ñ', '‘±’∂’±’∂’°’Ø’°’∂ ’æ’´÷Ä’°’æ’∏÷Ä’°’∂÷Ñ, ’©’∑’∂’°’¥’°’∂÷Ñ', 2),
        ('psychological_damage', '’Ä’°’¥’¢’°’æ’´ ’æ’∂’°’Ω’∏÷Ç’¥/’æ’°÷Ä’Ø’°’¢’•’Ø’∏÷Ç’¥', '’ñ’•’µ÷Ñ ’∞’°÷Ä’©’°’Ø’∏÷Ç’¥, ’Ω’∏÷Å. ÷Å’°’∂÷Å’•÷Ä’∏÷Ç’¥', 3),
        ('psychological_damage', '‘ø’•’≤’Æ ’∞’°’∑’æ’´ ’Ω’ø’•’≤’Æ’∏÷Ç’¥ ’´’¥ ’°’∂’∏÷Ç’∂’∏’æ', '’é’∂’°’Ω ’∞’°’Ω÷Å’∂’•’¨’∏÷Ç ’∂’∫’°’ø’°’Ø’∏’æ', 4),
        ('psychological_damage', '’ç’∏÷Å’´’°’¨’°’Ø’°’∂/’®’∂’ø’°’∂’•’Ø’°’∂ ’≠’∂’§’´÷Ä’∂’•÷Ä', '‘ø’´’¢’•÷Ä’∞’°÷Ä’±’°’Ø’∏÷Ç’¥’∂’•÷Ä’´ ’∞’•’ø÷á’°’∂÷Ñ’∏’æ', 5),
        
        # No damage category
        ('incident_no_damage', '’ç’•’≤’¥’•’¨ ’•’¥ ’Ø’°’Ω’Ø’°’Æ’•’¨’´ ’∞’≤’¥’°’∂ ’æ÷Ä’°, ’æ’∂’°’Ω ’π’Ø’°', '‘≤’°’µ÷Å ’æ’∂’°’Ω ’π’´ ’•’≤’•’¨', 1),
        ('incident_no_damage', '‘≤’°÷Å’•’¨ ’•’¥ ’Ø’°’Ω’Ø’°’Æ’•’¨’´ ’∂’°’¥’°’Ø', '‘≤’°÷Å’•’¨ ’•’¥ ’Ø’°’Ω’Ø’°’Æ’•’¨’´ ’∂’°’¥’°’Ø ’Ø’°’¥ ’Ø÷Å’∏÷Ä’§', 2),
        ('incident_no_damage', '’è’æ’µ’°’¨ ’•’¥ ’ø÷Ä’°’¥’°’§÷Ä’•’¨, ’æ’∂’°’Ω ’π’Ø’°', '‘≤’°’µ÷Å ’æ’∂’°’Ω ’π’´ ’•’≤’•’¨', 3),
        ('incident_no_damage', '‘ø’°’∂’≠’°’ø’•’Ω’•’¨ ’•’¥ ’º’´’Ω’Ø’®, ’°’º’°’∂÷Å ’∞’•’ø÷á’°’∂÷Ñ’∂’•÷Ä’´', '’é’∂’°’Ω ’π’•’¥ ’¶’£’°÷Å’•’¨, ’Ø’°’∂’≠’°’ø’•’Ω’•’¨ ’•’¥ ’º’´’Ω’Ø’®', 4),
        
        # Other damage category
        ('other_damage', '‘±’µ’¨ ’æ’∂’°’Ω', '‘Ω’∂’§÷Ä’∏÷Ç’¥ ’•’¥ ’¥’°’∂÷Ä’°’¥’°’Ω’∂’•’¨ ’Ω’ø’∏÷Ä÷á', 1),
    ]
    
    created_count = 0
    for category, name, description, order in damage_types_data:
        damage_type, created = DamageType.objects.get_or_create(
            name=name,
            defaults={
                'category': category,
                'description': description,
                'order': order,
                'is_active': True
            }
        )
        if created:
            print(f"‚úÖ Created: {damage_type.name}")
            created_count += 1
        else:
            print(f"‚ö†Ô∏è  Already exists: {damage_type.name}")
    
    total = DamageType.objects.count()
    print(f"üéâ Total damage types: {total} (Created: {created_count})")

if __name__ == "__main__":
    create_damage_types()
